name: Prepare and Push Candidate to BISAM Repo

# Trigger manually from the Actions tab
on:
  workflow_dispatch:

permissions:
  contents: read # Read access to BISAM-dev repo is needed

jobs:
  prepare-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout BISAM-dev code
        uses: actions/checkout@v4
        # Checks out the branch where the workflow is run (usually main/dev of BISAM-dev)

      - name: Debug Initial BISAM-dev Structure
        run: |
          echo "Current directory (BISAM-dev): $(pwd)"
          echo "Initial repository contents:"
          ls -laR
          echo "--------------------"

      # --- Step: Prepare R Package Structure ---
      # (This is the same cleaning logic as before, adapted slightly)
      - name: Prepare R Package Structure in Temp Dir
        id: prepare
        run: |
          echo "Starting R package structure preparation..."
          TEMP_DIR="../r_package_clean_build"
          mkdir -p "$TEMP_DIR"
          echo "Created temporary build directory: $TEMP_DIR"
          mkdir -p "$TEMP_DIR/src"
          echo "Created $TEMP_DIR/src directory"

          echo "Searching for .cpp and .h files (excluding main.cpp)..."
          find . -type f \( -name '*.cpp' -o -name '*.h' \) -not -name 'main.cpp' -print -exec cp {} "$TEMP_DIR/src/" \;
          echo "Copied C++/H files to $TEMP_DIR/src/"

          echo "Copying standard R package components..."
          rsync -av --ignore-errors R/ "$TEMP_DIR/R/" || echo "No R directory found."
          rsync -av --ignore-errors man/ "$TEMP_DIR/man/" || echo "No man directory found."
          rsync -av --ignore-errors data/ "$TEMP_DIR/data/" || echo "No data directory found."
          rsync -av --ignore-errors inst/ "$TEMP_DIR/inst/" || echo "No inst directory found."
          rsync -av --ignore-errors vignettes/ "$TEMP_DIR/vignettes/" || echo "No vignettes directory found."
          rsync -av --ignore-errors tests/ "$TEMP_DIR/tests/" || echo "No tests directory found."

          cp DESCRIPTION "$TEMP_DIR/" 2>/dev/null || echo "No DESCRIPTION file found."
          cp NAMESPACE "$TEMP_DIR/" 2>/dev/null || echo "No NAMESPACE file found."
          cp README.md "$TEMP_DIR/" 2>/dev/null || echo "No README.md file found."
          cp LICENSE* "$TEMP_DIR/" 2>/dev/null || echo "No LICENSE file(s) found."
          cp .Rbuildignore "$TEMP_DIR/" 2>/dev/null || echo "No .Rbuildignore file found."

          echo "Prepared structure in $TEMP_DIR:"
          ls -laR "$TEMP_DIR"
          # Set output for the next step
          echo "temp_dir_path=$TEMP_DIR" >> $GITHUB_OUTPUT

      # --- Step: Push to BISAM Repository ---
      - name: Checkout BISAM repo candidate branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/BISAM # Assumes same owner, replace if different
          path: bisam_repo_checkout # Checkout BISAM repo into a subdirectory
          ref: candidate # Target branch in BISAM repo
          token: ${{ secrets.BISAM_REPO_PAT }} # Use the PAT stored in secrets

      - name: Synchronize cleaned files to BISAM checkout
        run: |
          PREPARED_DIR="${{ steps.prepare.outputs.temp_dir_path }}"
          TARGET_DIR="bisam_repo_checkout"
          echo "Syncing from $PREPARED_DIR to $TARGET_DIR"
          # Use rsync to copy files from the prepared dir to the target repo checkout
          # --delete ensures files removed during cleaning are removed from target
          # --exclude='.git/' prevents deleting the .git dir in the checkout
          rsync -av --delete --exclude='.git/' "$PREPARED_DIR/" "$TARGET_DIR/"
          echo "Sync complete. Contents of $TARGET_DIR:"
          ls -la "$TARGET_DIR"
          # Clean up the temporary prepared directory
          rm -rf "$PREPARED_DIR"

      - name: Commit and Push changes to BISAM candidate branch
        run: |
          cd bisam_repo_checkout
          git config --global user.name "GitHub Action (via BISAM-dev)"
          git config --global user.email "action@github.com"

          # Check if there are changes to commit
          if git status --porcelain | grep .; then
            echo "Changes detected in BISAM checkout, committing..."
            git add .
            git commit -m "Update candidate branch from BISAM-dev [skip ci]"
            # Force push to overwrite the candidate branch completely
            git push origin candidate --force
            echo "Force-pushed changes to BISAM/candidate branch."
          else
            echo "No changes detected in BISAM checkout. Nothing to commit or push."
          fi
          cd .. # Go back to the original directory